<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo.kafka</groupId>
	<artifactId>kafka-producer-consumer</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<java.version>8</java.version>
		<avro.version>1.9.1</avro.version>
		<gson.version>2.8.9</gson.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories>



	<dependencies>
		<!-- Kafka client for producer/consumer operations -->
		<!-- <dependency> <groupId>org.apache.kafka</groupId> <artifactId>kafka-clients</artifactId> 
			<version>1.1.0</version> </dependency> <dependency> <groupId>org.apache.kafka</groupId> 
			<artifactId>kafka-streams</artifactId> <version>1.1.0</version> </dependency> -->

		<!-- Add the Kafka dependencies -->

		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
			<version>5.2.2</version>
		</dependency>



		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>2.5.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>2.5.0</version>
		</dependency>


		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.30</version>
		</dependency>

		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-json-serializer</artifactId>
			<version>5.5.0</version>
		</dependency>

	</dependencies>



	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>1.8.2</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<!-- <sourceDirectory>${project.basedir}/src/main/resources/avro/</sourceDirectory> 
								<outputDirectory>${project.build.directory}/generated-sources</outputDirectory> -->

							<sourceDirectory>${project.basedir}/src/main/resources/</sourceDirectory>
							<outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<!-- HDInsight 3.6 uses Java 8 -->
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- build an uber jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<!-- <configuration> <transformers> Keep us from getting a can't overwrite 
					file error <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" 
					/> main class so it is executable <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> 
					<mainClass>com.microsoft.example.Run</mainClass> </transformer> </transformers> 
					Keep us from getting a bad signature error <filters> <filter> <artifact>*:*</artifact> 
					<excludes> <exclude>META-INF/*.SF</exclude> <exclude>META-INF/*.DSA</exclude> 
					<exclude>META-INF/*.RSA</exclude> </excludes> </filter> </filters> </configuration> 
					<executions> <execution> <phase>package</phase> <goals> <goal>shade</goal> 
					</goals> </execution> </executions> -->
			</plugin>
		</plugins>
	</build>
</project>